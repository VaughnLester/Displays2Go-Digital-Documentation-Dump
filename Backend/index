//Package.json -> Main: index -> Main = Entry point to node program

const http = require('http'); //http module -> used to create server  
const mysql = require('mysql2'); //mysql module -> used to initiate the mysql database
const urI = require('url'); //url module -> used to create api endpoints
const fs = require('fs'); //fs module -> used to read and serve frontend files 
const querystring = require('node:querystring');//used to parse submitted form data


//--------------1. Create Server --------------------
const server = http.createServer((request, response)=>{

  //-------------2. Create API --------------------
  const url = request.url;
  const parsedUrl = urI.parse(request.url, true)
  //ROUTE: /home (responds with text)
  if (url == "/home") {
  response.writeHead(200, {
    'Content-Type': 'text/html',
    'Access-Control-Allow-Origin' : '*'});//enables CORS
    response.write("<h3>Hello From the Backend!<h3>")
    response.end();
  }
  //ROUTE: /text (responds with text)
  else if (url == "/text") {
  response.writeHead(200, {
    'Content-Type': 'text/html',
    'Access-Control-Allow-Origin' : '*'});//enables CORS
    response.write("Manual string entered on the backend.")
    response.end();
  }
  //ROUTE: /databasePull (responds with database query (SELECT))
  //SQL QUERIES RETURN AN ARRAY, NOT A JSON OBJECT!!! must use array [0] and then the json notation -> .text
  else if (url == "/databasePull"){
    connection.query('SELECT * FROM test WHERE idTest = "Jason";', (err,results) =>{ //First create SQL query
      if (err){ //handle error
        response.writeHead(200, {
          'Content-Type': 'text/html',
          'Access-Control-Allow-Origin' : '*'});//enables CORS
        response.end('error fetching data');
        return;
      }
      response.writeHead(200, { //Then respond with SQL query results 
        'Content-Type': 'text/html',
        'Access-Control-Allow-Origin' : '*'});//enables CORS
      jsonString = JSON.stringify(results);
      jsonObject = JSON.parse(jsonString);

      fname = jsonObject[0].idTest;
      lname = jsonObject[0].text;
      response.end("Database Pull: " + fname + ' ' + lname);
    });
  } 
  //ROUTE: /input (respondes with databse query (INSERT))
  //clean this code!
  else if (parsedUrl.pathname == "/input"){  //The path created on the form -> action attribute + the information you submitted (which is why yo uhave to parse it)
      //use request.on to handle received data

      //the body remains empty!! so your not pulling data, your pulling just the href!! this needs to be fixed!!
      let body = '';
      request.on('data',chunk => {body += chunk.toString();});
      request.on('end',()=>{
      //const x = querystring(body);  
      //inserting the data into the database 
      console.log("Parsed: " + body);  
      const sql = 'INSERT INTO test (idtest, text) values(?,?)'
      connection.query(sql,["4", parsedUrl.href], (err, results) =>{
        if (err) {console.log("error inserting data into database"); return;}
        console.log("Data entered successfully into database!");
        console.log("Data entered: " + parsedUrl.href);
        //parse form data here to start


      }) 
      response.writeHead(200, {
        'Content-Type': 'text/html',
        'Access-Control-Allow-Origin' : '*'});//enables CORS
      response.end("data received: " + parsedUrl.href)
    });
  } 


  //retreiving form data the right way!!
  else if (request.method === 'POST' && request.url === '/'){
    let body = '';
    request.on('data', chunk =>{
      body += chunk.toString();
    });
    request.on('end', ()=>{
      const parsedData = querystring.parse(body);
      response.writeHead(200, {  
        'Content-Type': 'text/html',
        'Access-Control-Allow-Origin' : '*'});//enables CORS

      //parsing data for first and last name
      const jsonString = JSON.stringify(parsedData);
      const jsonObject = JSON.parse(jsonString);
      console.log(jsonObject);
      const fname = jsonObject.fname;
      const lname = jsonObject.lname;
      

      //inserting first and last name into databse 
      const sql = 'INSERT INTO test (idtest, text) values(?,?)'
      connection.query(sql,[fname, lname], (err, results) =>{
        if (err) {console.log("error inserting data into database "+ err); return;}
        else {
          console.log("Database entry successful: " + fname + ' ' + lname);}
      })



      response.end(`Received data: ${JSON.stringify(parsedData)}`);
    })
  }

    //if no route is found - returning your index.html homepage from server!!!
    else 
    {
    response.writeHead(200, {
      'Content-Type': 'text/html',
      'Access-Control-Allow-Origin' : '*'});//enables CORS
    // fs.createReadStream('index.html').pipe(response);
    fs.readFile('index.html', function(err, content){
      if (err){console.log("error occurred trying to send html file"); response.end}
      else {
        response.end(content);
      }
    })
    // response.end('Not one of your designated endpoints! But we are connected!');
    }
  }
);

//creating database connection
const connection = mysql.createConnection({
  host:'sql5.freesqldatabase.com',
  user: 'sql5768538',
  password: '9np9VjdEks',
  database: 'sql5768538'
});

//connecting database
connection.connect(function(err)
  {
    if (err){console.log("error occurred while attempting connection: ", err)}
    else {console.log("database connection successful!")}
  }
);

//inserting data into database
var data = "INSERT INTO test (idtest, text) VALUES ('1', 'This is sample text!')";
connection.query(data, function(err){
  if (err) {console.log("error entering data into the database...");}
  console.log("Data entry successful!");
});

//inserting more data into database
var data2 = "INSERT INTO test (idtest, text) VALUES ('2', 'sample text!')";
connection.query(data2, function(err){
  if (err) {console.log("error entering data into the database...");}
  console.log("Data entry successful!");
});

//pulling data from backend 
function pullData(){
  var x = "";
  var y = "original value";
  var z = "";
  connection.connect(function(err){
    if(err){console.log("error occurred whilte attempting connection: ", err)}
    else {console.log("database conncection successful")}
  })
  var data = "SELECT text FROM test where idtest = 1";

  y =  connection.query(data, (err,results)=>{
      if (err){return "there was an erro!";}
      console.log("raw sql pull: " + results);
      x = JSON.stringify(results);
      console.log("raw pull stringify: " + x); //prints out correctly
      y = JSON.parse(x);
      console.log("raw pull stringify parsed: " + y);
      console.log(y instanceof Object);
    })
    console.log("after the function: " + JSON.stringify(y)); //prints out incorrectly 
    //x = JSON.stringify(y);
    //z = JSON.parse(x);
    return y;
}
pullData();


//pull data from database and return an array:
var theData = "";
function returnData(){ //the problems is it's returning the QUERY itself and not the RESULTS! we need to extract the RESULTS and then stringy it in the response . write on the api 
  var data = "SELECT text FROM test where idtest = 1";
  var dataArray = "original value";
 (connection.query(data, (err,results)=>{
      if (err){return "there was an erro!";}
      dataArray = results.map(row => Object.values(row));
      theData = results;
      return results;
    }
  ))
}


console.log("new function" + JSON.stringify(returnData()));

//connecting server
server.listen(5001, console.log("server is listening on 5001"));



var wo = 5
function gg (){
  wo =7;
}
gg();
console.log(wo);

console.log(JSON.stringify(returnData()));